///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.30.1.6000 for 8051              06/Jan/2020  14:52:57
// Copyright 2004-2018 IAR Systems AB.
// PC-locked license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        D:\Keus_Docs\zigbee_EStest\Components\keus\embeddedswitch\keus_task.c
//    Command line       =  
//        -f C:\Users\Monisha\AppData\Local\Temp\EWB3EC.tmp
//        (D:\Keus_Docs\zigbee_EStest\Components\keus\embeddedswitch\keus_task.c
//        -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D
//        HAL_KEY=FALSE -D HAL_LCD=FALSE -D HAL_LED=FALSE -D HAL_UART=TRUE -D
//        HAL_UART_ISR=1 -D HAL_UART_ISR_RX_MAX=64 -D HAL_UART_ISR_TX_MAX=64 -D
//        HAL_UART_DMA=2 -D HAL_UART_DMA_RX_MAX=64 -D HAL_UART_DMA_TX_MAX=64 -D
//        NWK_MAX_DEVICE_LIST=5 -D NWK_LINK_STATUS_PERIOD=50 -D
//        INT_HEAP_LEN=3172 -D OSC32K_CRYSTAL_INSTALLED=FALSE -D
//        MULTICAST_ENABLED=FALSE -D APS_MAX_GROUPS=4 -D ZCL_BASIC -D
//        ZCL_IDENTIFY -D ZCL_READ -D DISABLE_GREENPOWER_BASIC_PROXY -D
//        KEUS_GPIO_INTERRUPT_HANDLER_DISABLE -lC
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\RouterEB\List
//        -lA
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\RouterEB\List
//        --diag_suppress Pe001,Pa010 -o
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\RouterEB\Obj
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -f
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter.cfg
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DRTR_NWK) -f
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0}
//        -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000
//        -DENABLE_LED4_DISABLE_S1) -f
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\Source\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\Source\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\ZMain\TI2530DB\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\hal\include\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\mac\include\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\mac\high_level\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\mt\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\osal\include\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\services\saddr\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\services\sdata\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\stack\af\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\stack\bdb\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\stack\nwk\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\stack\bdb\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\stack\gp\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\stack\sapi\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\stack\sec\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\stack\sys\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\stack\zcl\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\stack\zdo\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\zmac\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\keus\embeddedswitch\
//        -I
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\..\..\..\..\..\Components\keus\common\
//        -Ohz --require_prototypes)
//    Locale             =  English_USA.1252
//    List file          =  
//        D:\Keus_Docs\zigbee_EStest\Projects\zstack\HomeAutomation\GenericApp_ES\CC2530DB\RouterEB\List\keus_task.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME keus_task

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC `??KEUS_init_fnc::?relay`
        FUNCTION `??KEUS_init_fnc::?relay`,0203H
        PUBLIC `??KEUS_loop::?relay`
        FUNCTION `??KEUS_loop::?relay`,0203H
        PUBLIC `??ledTimerCbk::?relay`
        FUNCTION `??ledTimerCbk::?relay`,0203H
        PUBLIC `??leddebounceCbk::?relay`
        FUNCTION `??leddebounceCbk::?relay`,0203H
        PUBLIC KEUS_init_fnc
        FUNCTION KEUS_init_fnc,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC KEUS_loop
        FUNCTION KEUS_loop,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC buttonManager
        PUBLIC buttonPin1
        PUBLIC buttonPin2
        PUBLIC buttonPin3
        PUBLIC buttonPin4
        PUBLIC button_Pressed
        PUBLIC button_state
        PUBLIC count
        PUBLIC count1
        PUBLIC count2
        PUBLIC debounce
        PUBLIC debounceTimer
        PUBLIC intervalTimer
        PUBLIC ledPin1
        PUBLIC ledPin2
        PUBLIC ledPin3
        PUBLIC ledPin4
        PUBLIC ledTimerCbk
        FUNCTION ledTimerCbk,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 4, STACK
        PUBLIC leddebounceCbk
        FUNCTION leddebounceCbk,0603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
HalUARTPoll         SYMBOL "HalUARTPoll"
`??HalUARTPoll::?relay` SYMBOL "?relay", HalUARTPoll
HalUARTWrite        SYMBOL "HalUARTWrite"
`??HalUARTWrite::?relay` SYMBOL "?relay", HalUARTWrite
KeusGPIOEdgeConfiguration SYMBOL "KeusGPIOEdgeConfiguration"
`??KeusGPIOEdgeConfiguration::?relay` SYMBOL "?relay", KeusGPIOEdgeConfiguration
KeusGPIOReadPinValue SYMBOL "KeusGPIOReadPinValue"
`??KeusGPIOReadPinValue::?relay` SYMBOL "?relay", KeusGPIOReadPinValue
KeusGPIOSetDirection SYMBOL "KeusGPIOSetDirection"
`??KeusGPIOSetDirection::?relay` SYMBOL "?relay", KeusGPIOSetDirection
KeusGPIOSetPinValue SYMBOL "KeusGPIOSetPinValue"
`??KeusGPIOSetPinValue::?relay` SYMBOL "?relay", KeusGPIOSetPinValue
KeusGPIOToggledState SYMBOL "KeusGPIOToggledState"
`??KeusGPIOToggledState::?relay` SYMBOL "?relay", KeusGPIOToggledState
KeusTimerUtilAddTimer SYMBOL "KeusTimerUtilAddTimer"
`??KeusTimerUtilAddTimer::?relay` SYMBOL "?relay", KeusTimerUtilAddTimer
KeusTimerUtilInit   SYMBOL "KeusTimerUtilInit"
`??KeusTimerUtilInit::?relay` SYMBOL "?relay", KeusTimerUtilInit
KeusTimerUtilStartTimer SYMBOL "KeusTimerUtilStartTimer"
`??KeusTimerUtilStartTimer::?relay` SYMBOL "?relay", KeusTimerUtilStartTimer
initUart0           SYMBOL "initUart0"
`??initUart0::?relay` SYMBOL "?relay", initUart0
osal_strlen         SYMBOL "osal_strlen"
`??osal_strlen::?relay` SYMBOL "?relay", osal_strlen
KEUS_init_fnc       SYMBOL "KEUS_init_fnc"
`??KEUS_init_fnc::?relay` SYMBOL "?relay", KEUS_init_fnc
KEUS_loop           SYMBOL "KEUS_loop"
`??KEUS_loop::?relay` SYMBOL "?relay", KEUS_loop
ledTimerCbk         SYMBOL "ledTimerCbk"
`??ledTimerCbk::?relay` SYMBOL "?relay", ledTimerCbk
leddebounceCbk      SYMBOL "leddebounceCbk"
`??leddebounceCbk::?relay` SYMBOL "?relay", leddebounceCbk

        EXTERN `??HalUARTPoll::?relay`
        FUNCTION `??HalUARTPoll::?relay`,00H
        EXTERN `??HalUARTWrite::?relay`
        FUNCTION `??HalUARTWrite::?relay`,00H
        EXTERN `??KeusGPIOEdgeConfiguration::?relay`
        FUNCTION `??KeusGPIOEdgeConfiguration::?relay`,00H
        EXTERN `??KeusGPIOReadPinValue::?relay`
        FUNCTION `??KeusGPIOReadPinValue::?relay`,00H
        EXTERN `??KeusGPIOSetDirection::?relay`
        FUNCTION `??KeusGPIOSetDirection::?relay`,00H
        EXTERN `??KeusGPIOSetPinValue::?relay`
        FUNCTION `??KeusGPIOSetPinValue::?relay`,00H
        EXTERN `??KeusGPIOToggledState::?relay`
        FUNCTION `??KeusGPIOToggledState::?relay`,00H
        EXTERN `??KeusTimerUtilAddTimer::?relay`
        FUNCTION `??KeusTimerUtilAddTimer::?relay`,00H
        EXTERN `??KeusTimerUtilInit::?relay`
        FUNCTION `??KeusTimerUtilInit::?relay`,00H
        EXTERN `??KeusTimerUtilStartTimer::?relay`
        FUNCTION `??KeusTimerUtilStartTimer::?relay`,00H
        EXTERN `??initUart0::?relay`
        FUNCTION `??initUart0::?relay`,00H
        EXTERN `??osal_strlen::?relay`
        FUNCTION `??osal_strlen::?relay`,00H
        EXTERN HalUARTPoll
        FUNCTION HalUARTPoll,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTWrite
        FUNCTION HalUARTWrite,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN KeusGPIOEdgeConfiguration
        FUNCTION KeusGPIOEdgeConfiguration,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN KeusGPIOReadPinValue
        FUNCTION KeusGPIOReadPinValue,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN KeusGPIOSetDirection
        FUNCTION KeusGPIOSetDirection,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN KeusGPIOSetPinValue
        FUNCTION KeusGPIOSetPinValue,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN KeusGPIOToggledState
        FUNCTION KeusGPIOToggledState,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN KeusTimerUtilAddTimer
        FUNCTION KeusTimerUtilAddTimer,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN KeusTimerUtilInit
        FUNCTION KeusTimerUtilInit,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN KeusTimerUtilStartTimer
        FUNCTION KeusTimerUtilStartTimer,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN initUart0
        FUNCTION initUart0,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_strlen
        FUNCTION osal_strlen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// D:\Keus_Docs\zigbee_EStest\Components\keus\embeddedswitch\keus_task.c
//    1 
//    2 /********************************************************
//    3  * @fn  This function is to declare all GPIOs
//    4  * *****************************************************/
//    5 
//    6 #include "keus_task.h"
//    7 
//    8 #define UART0     HAL_UART_PORT_0
//    9 //#define UART1     HAL_UART_PORT_1
//   10 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   11 bool debounce = false;
debounce:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   12 //bool toggle = false, toggle1 = false, toggle3 = false;

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   13 uint8 count = 0, count1 = 0, count2 = 0;//led_state;
count:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
count1:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
count2:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   14 uint8 button_Pressed =0,button_state = 0;
button_Pressed:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
button_state:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   15 
//   16 void ledTimerCbk(uint8 timerId);
//   17 void leddebounceCbk(uint8 timerId);
//   18 //void check_sw_pressed(void);
//   19 
//   20 
//   21 typedef void (*KeusBtnCbk)(void);
//   22 typedef struct {
//   23   uint16 btnDelay;
//   24   uint16 elapsedTime;
//   25   KeusBtnCbk btnCbk;
//   26 } KeusBtnManager;
//   27 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   28 KeusBtnManager buttonManager;
buttonManager:
        DS 6
        REQUIRE __INIT_XDATA_Z
//   29 
//   30 //Debounce configuration

        RSEG XDATA_I:XDATA:NOROOT(0)
//   31 KeusTimerConfig debounceTimer = {
debounceTimer:
        DATA8
        DS 8
        REQUIRE `?<Initializer for debounceTimer>`
        REQUIRE __INIT_XDATA_I
//   32     &leddebounceCbk,
//   33     200,
//   34     true,
//   35     -1,
//   36     0};
//   37 
//   38 //Timer Configuration

        RSEG XDATA_I:XDATA:NOROOT(0)
//   39 KeusTimerConfig intervalTimer = {
intervalTimer:
        DATA8
        DS 8
        REQUIRE `?<Initializer for intervalTimer>`
        REQUIRE __INIT_XDATA_I
//   40     &ledTimerCbk,
//   41     100,
//   42     true,
//   43     -1,
//   44     0};
//   45 /****************************************************************************
//   46  * **************************FUNCTION DECLARATION****************************
//   47  * ***************************************************************************/
//   48 void KEUS_init_fnc(void);
//   49 void KEUS_loop(void);
//   50 
//   51 //********LED and button initilization

        RSEG XDATA_I:XDATA:NOROOT(0)
//   52 extern KeusGPIOPin ledPin1 = {0, 0, GPIO_OUTPUT, false, LED_OFF};
ledPin1:
        DATA8
        DS 5
        REQUIRE `?<Initializer for ledPin1>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
//   53 extern KeusGPIOPin ledPin2 = {0, 1, GPIO_OUTPUT, false, LED_OFF};
ledPin2:
        DATA8
        DS 5
        REQUIRE `?<Initializer for ledPin2>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
//   54 extern KeusGPIOPin ledPin3 = {0, 4, GPIO_OUTPUT, false, LED_OFF};
ledPin3:
        DATA8
        DS 5
        REQUIRE `?<Initializer for ledPin3>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
//   55 extern KeusGPIOPin ledPin4 = {0, 5, GPIO_OUTPUT, false, LED_OFF};
ledPin4:
        DATA8
        DS 5
        REQUIRE `?<Initializer for ledPin4>`
        REQUIRE __INIT_XDATA_I
//   56 

        RSEG XDATA_I:XDATA:NOROOT(0)
//   57 extern KeusGPIOPin buttonPin1 = {1, 2, GPIO_INPUT, true, LED_OFF};
buttonPin1:
        DATA8
        DS 5
        REQUIRE `?<Initializer for buttonPin1>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
//   58 extern KeusGPIOPin buttonPin2 = {1, 3, GPIO_INPUT, true, LED_OFF};
buttonPin2:
        DATA8
        DS 5
        REQUIRE `?<Initializer for buttonPin2>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
//   59 extern KeusGPIOPin buttonPin3 = {1, 4, GPIO_INPUT, true, LED_OFF};
buttonPin3:
        DATA8
        DS 5
        REQUIRE `?<Initializer for buttonPin3>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
//   60 extern KeusGPIOPin buttonPin4 = {1, 5, GPIO_INPUT, true, LED_OFF};
buttonPin4:
        DATA8
        DS 5
        REQUIRE `?<Initializer for buttonPin4>`
        REQUIRE __INIT_XDATA_I
//   61 /*******************************************************
//   62  * @brief  Callback function for timer
//   63            Called every after 100ms
//   64 
//   65 *********************************************************/

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//   66 void ledTimerCbk(uint8 timerId)
ledTimerCbk:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ledTimerCbk
        CODE
//   67 {
        FUNCALL ledTimerCbk, KeusGPIOReadPinValue
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ledTimerCbk, KeusGPIOSetPinValue
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ledTimerCbk, KeusGPIOToggledState
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ledTimerCbk, KeusGPIOSetPinValue
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   68   KeusGPIOReadPinValue(&buttonPin1);
        ; Setup parameters for call to function KeusGPIOReadPinValue
        MOV       R2,#buttonPin1 & 0xff
        MOV       R3,#(buttonPin1 >> 8) & 0xff
        LCALL     `??KeusGPIOReadPinValue::?relay`; Banked call to: KeusGPIOReadPinValue
//   69   if (buttonPin1.state == BUTTON_ACTIVE) {
        MOV       DPTR,#buttonPin1 + 4
        MOVX      A,@DPTR
        MOV       DPTR,#buttonManager + 2
        JNZ       ??ledTimerCbk_0
//   70     buttonManager.elapsedTime += KEUS_EMBEDDEDSWITCH_BUTTON_POLL_TIME;
        MOVX      A,@DPTR
        ADD       A,#-0xc
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x1
        MOVX      @DPTR,A
//   71     count++;
        MOV       DPTR,#count
        MOVX      A,@DPTR
        INC       A
        MOVX      @DPTR,A
//   72     if(count >= 100){
        CLR       C
        SUBB      A,#0x64
        JC        ??ledTimerCbk_1
//   73       ledPin1.state = LED_ON;
        MOV       DPTR,#ledPin1 + 4
        CLR       A
        SJMP      ??ledTimerCbk_2
//   74       KeusGPIOSetPinValue(&ledPin1);
//   75     }
//   76     else if (buttonManager.elapsedTime >= buttonManager.btnDelay) {
??ledTimerCbk_1:
        MOV       DPTR,#buttonManager
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       DPH,#((buttonManager + 2) >> 8) & 0xff
        MOV       DPL,#(buttonManager + 2) & 0xff
        CLR       C
        MOVX      A,@DPTR
        SUBB      A,R0
        INC       DPTR
        MOVX      A,@DPTR
        SUBB      A,R1
        JC        ??ledTimerCbk_3
//   77       buttonManager.elapsedTime = 0;
        MOV       DPTR,#buttonManager + 2
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//   78       ledPin1.state = KeusGPIOToggledState(ledPin1.state); //toggle led at button pressed
        ; Setup parameters for call to function KeusGPIOToggledState
        MOV       DPTR,#ledPin1 + 4
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??KeusGPIOToggledState::?relay`; Banked call to: KeusGPIOToggledState
        MOV       A,R1
        MOV       DPTR,#ledPin1 + 4
??ledTimerCbk_2:
        MOVX      @DPTR,A
//   79       KeusGPIOSetPinValue(&ledPin1);
        ; Setup parameters for call to function KeusGPIOSetPinValue
        MOV       R2,#ledPin1 & 0xff
        MOV       R3,#(ledPin1 >> 8) & 0xff
        LCALL     `??KeusGPIOSetPinValue::?relay`; Banked call to: KeusGPIOSetPinValue
        SJMP      ??ledTimerCbk_3
//   80     }
//   81   } 
//   82   else {
//   83     buttonManager.elapsedTime = 0;
??ledTimerCbk_0:
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//   84     count = 0;
        MOV       DPTR,#count
        MOVX      @DPTR,A
//   85   }
//   86 }
??ledTimerCbk_3:
          CFI EndBlock cfiBlock0
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP       DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP       DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP      ?BRET
          CFI EndBlock cfiBlock1
//   87 
//   88 /**************************************************************
//   89  * @fn      leddebounceCbk
//   90  * @brief   callback function for Debounce,called every after 200ms
//   91  * @param   none
//   92  * @return  None
//   93  * ***********************************************************/
//   94 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//   95 void leddebounceCbk(uint8 timerId)
leddebounceCbk:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function leddebounceCbk
        CODE
//   96 {
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   97   debounce = true;
        MOV       DPTR,#debounce
        MOV       A,#0x1
        MOVX      @DPTR,A
//   98 }
        SJMP      ?Subroutine0
          CFI EndBlock cfiBlock2
//   99 
//  100 
//  101 
//  102 /*************************************************************
//  103  * @fn      KEUS_init_fnc
//  104  * @brief   All Initilization
//  105  * @return  None
//  106  * @param   None  
//  107  * ***********************************************************/

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  108 void KEUS_init_fnc(void)
KEUS_init_fnc:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function KEUS_init_fnc
        CODE
//  109 {
        FUNCALL KEUS_init_fnc, KeusGPIOSetDirection
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOSetDirection
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOEdgeConfiguration
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOReadPinValue
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOSetPinValue
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOSetDirection
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOSetDirection
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOEdgeConfiguration
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOReadPinValue
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOSetPinValue
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOSetDirection
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOSetDirection
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOEdgeConfiguration
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOReadPinValue
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOSetPinValue
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOSetDirection
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOSetDirection
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOEdgeConfiguration
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOReadPinValue
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusGPIOSetPinValue
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusTimerUtilAddTimer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusTimerUtilAddTimer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusTimerUtilInit
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, KeusTimerUtilStartTimer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, initUart0
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, osal_strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL KEUS_init_fnc, HalUARTPoll
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  110 
//  111   //****Setting GPIOs direction and edge
//  112   KeusGPIOSetDirection(&ledPin1);
        ; Setup parameters for call to function KeusGPIOSetDirection
        MOV       R2,#ledPin1 & 0xff
        MOV       R3,#(ledPin1 >> 8) & 0xff
        LCALL     `??KeusGPIOSetDirection::?relay`; Banked call to: KeusGPIOSetDirection
//  113   KeusGPIOSetDirection(&buttonPin1);
        ; Setup parameters for call to function KeusGPIOSetDirection
        MOV       R2,#buttonPin1 & 0xff
        MOV       R3,#(buttonPin1 >> 8) & 0xff
        LCALL     ?Subroutine1 & 0xFFFF
//  114   KeusGPIOEdgeConfiguration(&buttonPin1, GPIO_RISING_EDGE);
??CrossCallReturnLabel_0:
        MOV       R2,#buttonPin1 & 0xff
        MOV       R3,#(buttonPin1 >> 8) & 0xff
        LCALL     `??KeusGPIOEdgeConfiguration::?relay`; Banked call to: KeusGPIOEdgeConfiguration
//  115   KeusGPIOReadPinValue(&buttonPin1);
        ; Setup parameters for call to function KeusGPIOReadPinValue
        MOV       R2,#buttonPin1 & 0xff
        MOV       R3,#(buttonPin1 >> 8) & 0xff
        LCALL     `??KeusGPIOReadPinValue::?relay`; Banked call to: KeusGPIOReadPinValue
//  116   KeusGPIOSetPinValue(&ledPin1);
        ; Setup parameters for call to function KeusGPIOSetPinValue
        MOV       R2,#ledPin1 & 0xff
        MOV       R3,#(ledPin1 >> 8) & 0xff
        LCALL     `??KeusGPIOSetPinValue::?relay`; Banked call to: KeusGPIOSetPinValue
//  117 
//  118   KeusGPIOSetDirection(&ledPin2);
        ; Setup parameters for call to function KeusGPIOSetDirection
        MOV       R2,#ledPin2 & 0xff
        MOV       R3,#(ledPin2 >> 8) & 0xff
        LCALL     `??KeusGPIOSetDirection::?relay`; Banked call to: KeusGPIOSetDirection
//  119   KeusGPIOSetDirection(&buttonPin2);
        ; Setup parameters for call to function KeusGPIOSetDirection
        MOV       R2,#buttonPin2 & 0xff
        MOV       R3,#(buttonPin2 >> 8) & 0xff
        LCALL     ?Subroutine1 & 0xFFFF
//  120   KeusGPIOEdgeConfiguration(&buttonPin2, GPIO_RISING_EDGE);
??CrossCallReturnLabel_1:
        MOV       R2,#buttonPin2 & 0xff
        MOV       R3,#(buttonPin2 >> 8) & 0xff
        LCALL     `??KeusGPIOEdgeConfiguration::?relay`; Banked call to: KeusGPIOEdgeConfiguration
//  121   KeusGPIOReadPinValue(&buttonPin2);
        ; Setup parameters for call to function KeusGPIOReadPinValue
        MOV       R2,#buttonPin2 & 0xff
        MOV       R3,#(buttonPin2 >> 8) & 0xff
        LCALL     `??KeusGPIOReadPinValue::?relay`; Banked call to: KeusGPIOReadPinValue
//  122   KeusGPIOSetPinValue(&ledPin2);
        ; Setup parameters for call to function KeusGPIOSetPinValue
        MOV       R2,#ledPin2 & 0xff
        MOV       R3,#(ledPin2 >> 8) & 0xff
        LCALL     `??KeusGPIOSetPinValue::?relay`; Banked call to: KeusGPIOSetPinValue
//  123 
//  124   KeusGPIOSetDirection(&ledPin3);
        ; Setup parameters for call to function KeusGPIOSetDirection
        MOV       R2,#ledPin3 & 0xff
        MOV       R3,#(ledPin3 >> 8) & 0xff
        LCALL     `??KeusGPIOSetDirection::?relay`; Banked call to: KeusGPIOSetDirection
//  125   KeusGPIOSetDirection(&buttonPin3);
        ; Setup parameters for call to function KeusGPIOSetDirection
        MOV       R2,#buttonPin3 & 0xff
        MOV       R3,#(buttonPin3 >> 8) & 0xff
        LCALL     ?Subroutine1 & 0xFFFF
//  126   KeusGPIOEdgeConfiguration(&buttonPin3, GPIO_RISING_EDGE);
??CrossCallReturnLabel_2:
        MOV       R2,#buttonPin3 & 0xff
        MOV       R3,#(buttonPin3 >> 8) & 0xff
        LCALL     `??KeusGPIOEdgeConfiguration::?relay`; Banked call to: KeusGPIOEdgeConfiguration
//  127   KeusGPIOReadPinValue(&buttonPin3);
        ; Setup parameters for call to function KeusGPIOReadPinValue
        MOV       R2,#buttonPin3 & 0xff
        MOV       R3,#(buttonPin3 >> 8) & 0xff
        LCALL     `??KeusGPIOReadPinValue::?relay`; Banked call to: KeusGPIOReadPinValue
//  128   KeusGPIOSetPinValue(&ledPin3);
        ; Setup parameters for call to function KeusGPIOSetPinValue
        MOV       R2,#ledPin3 & 0xff
        MOV       R3,#(ledPin3 >> 8) & 0xff
        LCALL     `??KeusGPIOSetPinValue::?relay`; Banked call to: KeusGPIOSetPinValue
//  129 
//  130   KeusGPIOSetDirection(&ledPin4);
        ; Setup parameters for call to function KeusGPIOSetDirection
        MOV       R2,#ledPin4 & 0xff
        MOV       R3,#(ledPin4 >> 8) & 0xff
        LCALL     `??KeusGPIOSetDirection::?relay`; Banked call to: KeusGPIOSetDirection
//  131   KeusGPIOSetDirection(&buttonPin4);
        ; Setup parameters for call to function KeusGPIOSetDirection
        MOV       R2,#buttonPin4 & 0xff
        MOV       R3,#(buttonPin4 >> 8) & 0xff
        LCALL     ?Subroutine1 & 0xFFFF
//  132   KeusGPIOEdgeConfiguration(&buttonPin4, GPIO_RISING_EDGE);
??CrossCallReturnLabel_3:
        MOV       R2,#buttonPin4 & 0xff
        MOV       R3,#(buttonPin4 >> 8) & 0xff
        LCALL     `??KeusGPIOEdgeConfiguration::?relay`; Banked call to: KeusGPIOEdgeConfiguration
//  133   KeusGPIOReadPinValue(&buttonPin4);
        ; Setup parameters for call to function KeusGPIOReadPinValue
        MOV       R2,#buttonPin4 & 0xff
        MOV       R3,#(buttonPin4 >> 8) & 0xff
        LCALL     `??KeusGPIOReadPinValue::?relay`; Banked call to: KeusGPIOReadPinValue
//  134   KeusGPIOSetPinValue(&ledPin4);
        ; Setup parameters for call to function KeusGPIOSetPinValue
        MOV       R2,#ledPin4 & 0xff
        MOV       R3,#(ledPin4 >> 8) & 0xff
        LCALL     `??KeusGPIOSetPinValue::?relay`; Banked call to: KeusGPIOSetPinValue
//  135 
//  136   //******Enabling Timer and Debounce
//  137   KeusTimerUtilAddTimer(&intervalTimer);
        ; Setup parameters for call to function KeusTimerUtilAddTimer
        MOV       R2,#intervalTimer & 0xff
        MOV       R3,#(intervalTimer >> 8) & 0xff
        LCALL     `??KeusTimerUtilAddTimer::?relay`; Banked call to: KeusTimerUtilAddTimer
//  138   KeusTimerUtilAddTimer(&debounceTimer);
        ; Setup parameters for call to function KeusTimerUtilAddTimer
        MOV       R2,#debounceTimer & 0xff
        MOV       R3,#(debounceTimer >> 8) & 0xff
        LCALL     `??KeusTimerUtilAddTimer::?relay`; Banked call to: KeusTimerUtilAddTimer
//  139 
//  140   // init_status = KeusThemeSwitchMiniMemoryInit();
//  141   // read_status = KeusThemeSwitchMiniReadConfigDataIntoMemory();
//  142   //*****Timer Initialization
//  143   KeusTimerUtilInit();
        ; Setup parameters for call to function KeusTimerUtilInit
        LCALL     `??KeusTimerUtilInit::?relay`; Banked call to: KeusTimerUtilInit
//  144   //******Timer Start
//  145   KeusTimerUtilStartTimer();
        ; Setup parameters for call to function KeusTimerUtilStartTimer
        LCALL     `??KeusTimerUtilStartTimer::?relay`; Banked call to: KeusTimerUtilStartTimer
//  146 
//  147   // //*****UART Initialization
//  148   initUart0();
        ; Setup parameters for call to function initUart0
        LCALL     `??initUart0::?relay`; Banked call to: initUart0
//  149 
//  150   HalUARTWrite(HAL_UART_PORT_0, "KEUS INIT", (byte)osal_strlen("KEUS INIT"));
        ; Setup parameters for call to function osal_strlen
        MOV       R2,#`?<Constant "KEUS INIT">` & 0xff
        MOV       R3,#(`?<Constant "KEUS INIT">` >> 8) & 0xff
        LCALL     `??osal_strlen::?relay`; Banked call to: osal_strlen
        MOV       ?V0,R2
        ; Setup parameters for call to function HalUARTWrite
        MOV       R4,?V0
        MOV       R5,#0x0
        MOV       R2,#`?<Constant "KEUS INIT">` & 0xff
        MOV       R3,#(`?<Constant "KEUS INIT">` >> 8) & 0xff
        MOV       R1,#0x0
        LCALL     `??HalUARTWrite::?relay`; Banked call to: HalUARTWrite
//  151 
//  152   
//  153 
//  154   //********At bootup send config and switch state to mini-58
//  155   //uart_send_switch_sate_ack(UART1,0x04,4,0x0B);
//  156   buttonManager.btnDelay = KEUS_EMBEDDEDSWITCH_RESET_BTN_TIMEOUT;
        MOV       DPTR,#buttonManager
        MOV       A,#0x10
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#0x27
        MOVX      @DPTR,A
//  157   KEUS_loop();
??KEUS_init_fnc_0:
        ; Setup parameters for call to function HalUARTPoll
        LCALL     `??HalUARTPoll::?relay`; Banked call to: HalUARTPoll
        SJMP      ??KEUS_init_fnc_0
//  158 }
          CFI EndBlock cfiBlock3

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiCond4 Using cfiCommon0
          CFI Function KEUS_init_fnc
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond5 Using cfiCommon0
          CFI (cfiCond5) Function KEUS_init_fnc
          CFI (cfiCond5) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond5) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond5) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond5) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond5) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond5) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond5) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond5) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond5) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond5) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond5) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond5) CFA_SP SP+-2
          CFI (cfiCond5) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond6 Using cfiCommon0
          CFI (cfiCond6) Function KEUS_init_fnc
          CFI (cfiCond6) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond6) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond6) CFA_SP SP+-2
          CFI (cfiCond6) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function KEUS_init_fnc
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond7) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond7) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond7) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond7) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond7) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond7) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond7) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond7) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond7) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond7) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond7) CFA_SP SP+-2
          CFI (cfiCond7) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker8 Using cfiCommon1
          CFI (cfiPicker8) NoFunction
          CFI (cfiPicker8) Picker
        LCALL     `??KeusGPIOSetDirection::?relay`; Banked call to: KeusGPIOSetDirection
        ; Setup parameters for call to function KeusGPIOEdgeConfiguration
        ; Setup parameters for call to function KeusGPIOEdgeConfiguration
        ; Setup parameters for call to function KeusGPIOEdgeConfiguration
        ; Setup parameters for call to function KeusGPIOEdgeConfiguration
        MOV       R1,#0x1
        RET
          CFI EndBlock cfiCond4
          CFI EndBlock cfiCond5
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiPicker8
//  159 
//  160 /**********************************************************************
//  161  * @fn      KEUS_loop
//  162  * @brief   Infinite loop
//  163  * @return  No return after this
//  164  * @param   None
//  165  * *********************************************************************/

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  166 void KEUS_loop(void)
KEUS_loop:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function KEUS_loop
        CODE
//  167 {
        FUNCALL KEUS_loop, HalUARTPoll
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  168   while (1)
//  169   {
//  170     HalUARTPoll();
??KEUS_loop_0:
        ; Setup parameters for call to function HalUARTPoll
        LCALL     `??HalUARTPoll::?relay`; Banked call to: HalUARTPoll
        SJMP      ??KEUS_loop_0
//  171     //check_sw_pressed();
//  172     
//  173   }
//  174 }
          CFI EndBlock cfiBlock9

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for debounceTimer>`:
        DATA16
        DW `??leddebounceCbk::?relay`
        DW 200
        DATA8
        DB 1
        DB -1
        DATA16
        DW 0

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for intervalTimer>`:
        DATA16
        DW `??ledTimerCbk::?relay`
        DW 100
        DATA8
        DB 1
        DB -1
        DATA16
        DW 0

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for ledPin1>`:
        DATA8
        DB 0
        DB 0
        DB 1
        DB 0
        DB 1

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for ledPin2>`:
        DATA8
        DB 0
        DB 1
        DB 1
        DB 0
        DB 1

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for ledPin3>`:
        DATA8
        DB 0
        DB 4
        DB 1
        DB 0
        DB 1

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for ledPin4>`:
        DATA8
        DB 0
        DB 5
        DB 1
        DB 0
        DB 1

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for buttonPin1>`:
        DATA8
        DB 1
        DB 2
        DB 0
        DB 1
        DB 1

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for buttonPin2>`:
        DATA8
        DB 1
        DB 3
        DB 0
        DB 1
        DB 1

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for buttonPin3>`:
        DATA8
        DB 1
        DB 4
        DB 0
        DB 1
        DB 1

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for buttonPin4>`:
        DATA8
        DB 1
        DB 5
        DB 0
        DB 1
        DB 1

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ledTimerCbk::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ledTimerCbk

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??leddebounceCbk::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    leddebounceCbk

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??KEUS_init_fnc::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    KEUS_init_fnc

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??KEUS_loop::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    KEUS_loop

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "KEUS INIT">`:
        DB "KEUS INIT"

        END
//  175 
//  176 // void check_sw_pressed(void){
//  177 // if (buttonPin1.state == BUTTON_ACTIVE) {
//  178 //     buttonManager.elapsedTime += KEUS_EMBEDDEDSWITCH_BUTTON_POLL_TIME;
//  179     
//  180 //     if (buttonManager.elapsedTime >= buttonManager.btnDelay) {
//  181 //       buttonManager.elapsedTime = 0;
//  182 //       ledPin1.state = KeusGPIOToggledState(ledPin1.state); //toggle led at button pressed
//  183 //       KeusGPIOSetPinValue(&ledPin1);
//  184 //     }
//  185 //   } else {
//  186 //     buttonManager.elapsedTime = 0;
//  187 //   }
//  188 // }
// 
// 344 bytes in segment BANKED_CODE
//  24 bytes in segment BANK_RELAYS
//  56 bytes in segment XDATA_I
//  56 bytes in segment XDATA_ID
//  10 bytes in segment XDATA_ROM_C
//  12 bytes in segment XDATA_Z
// 
//  80 bytes of CODE     memory
//  10 bytes of CONST    memory
// 344 bytes of HUGECODE memory
//  68 bytes of XDATA    memory
//
//Errors: none
//Warnings: none
